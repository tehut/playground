TARGET = playground
IMAGE_TAG ?= latest
IMAGE = hootlet
GIT_REF ?= $(shell git rev-parse --short=8 --verify HEAD)


GOTARGET = github.com/heptio/$(TARGET)
DOCKER ?= docker
DIR := ${CURDIR}

GO_BUILDMNT = /go/src/$(GOTARGET)
GO_BUILD_IMAGE ?= golang:1.9

BUILDCMD = CGO_ENABLED=0 go build -a -o $(TARGET) -v
BUILD = $(BUILDCMD) $(GOTARGET)

.PHONY: all image cbuild docs-site clean push

all: image

image:
	$(DOCKER) build -t $(IMAGE):$(GIT_REF) -t $(IMAGE):$(IMAGE_TAG) .

cbuild:
	$(DOCKER) run --rm --volume $(DIR):$(GO_BUILDMNT) --workdir $(GO_BUILDMNT) $(GO_BUILD_IMAGE) /bin/sh -c '$(BUILD)'


clean:
	rm -f playground
	# This is piped to xargs so it doesn't fail if the image doesn't exist.
	# docker rmi -f <image> returns exit code 1 when there is no image to delete.
	# TODO: remove files generated by `make docs-site`
	$(DOCKER) images -q -f "reference=$(IMAGE_TAG)" | xargs $(DOCKER) rmi -f

push: image
	$(DOCKER) push $(IMAGE):$(IMAGE_TAG)
	$(DOCKER) push $(IMAGE):$(GIT_REF)
