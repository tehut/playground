{"params.libsonnet":"{\n  global: {\n    // User-defined global parameters; accessible to all component and environments, Ex:\n    // replicas: 4,\n  },\n  components: {\n    // Component-level parameters, defined initially from 'ks prototype use ...'\n    // Each object below should correspond to a component in the components/ directory\n    ui: {\n      containerPort: 80,\n      image: \"gcr.io/google-samples/gb-frontend:v4gcr.io/google-samples/gb-frontend:v4\",\n      name: \"example-ui\",\n      replicas: 1,\n      servicePort: 80,\n      type: \"LoadBalancer\",\n    },\n  },\n}\n","ui.jsonnet":"local params = std.extVar(\"__ksonnet/params\").components.ui;\nlocal k = import \"k.libsonnet\";\nlocal deployment = k.apps.v1beta1.deployment;\nlocal container = k.apps.v1beta1.deployment.mixin.spec.template.spec.containersType;\nlocal containerPort = container.portsType;\nlocal service = k.core.v1.service;\nlocal servicePort = k.core.v1.service.mixin.spec.portsType;\n\nlocal targetPort = params.containerPort;\nlocal labels = {app: params.name};\n\nlocal appService = service.new(\n  params.name,\n  labels,\n  servicePort.new(params.servicePort, targetPort)) +\nservice.mixin.spec.type(params.type);\n\nlocal appDeployment = deployment.new(\n  params.name,\n  params.replicas,\n  container.new(params.name, params.image) +\n    container.ports(containerPort.new(targetPort)),\n  labels);\n\nk.core.v1.list.new([appService, appDeployment])"}